apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  # Different additionnal configuration
  annotations:
    # Create Ingress controller based on nginx
    kubernetes.io/ingress.class: "nginx"
    # Nginx behaviors
    # Write to prevent error due to an update
    nginx.ingress.kubernetes.io/use-regex: "true"
    # Remove "/api" after the redirection on the correct ClusterIP (multi-server)
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  # Rules configuration
  rules:
    # Rule on http
    - http:
        # Redirect according to the URL
        paths:
          # Redirect to client-cluster-ip-service (more precisely multi-client pod)
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
          # Redirect to server-cluster-ip-service (more precisely multi-server pod)
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000
############################################################################
#########################         TEMPLATE         #########################
# To be used ONLY IF you want to configure your kubernetes environment WITH HTTPS CONNECTION
# /!\ This configuration requires A PAID DOMAIN NAME  /!\

##############   Replace actual code by the commented code below   ##############

#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: ingress-service
#  # Different additionnal configuration
#  annotations:
#    # Create Ingress controller based on nginx
#    kubernetes.io/ingress.class: "nginx"
#    # Nginx behaviors
#    # Write to prevent error due to an update
#    nginx.ingress.kubernetes.io/use-regex: "true"
#    # Remove "/api" after the redirection on the correct ClusterIP (multi-server)
#    nginx.ingress.kubernetes.io/rewrite-target: /$1
#    # Should get certificate from this issuer
#    cert-manager.io/cluster-issuer: "letsencrypt-prod"
#    # Reconfigure nginx and tell it always make sure that if someone is trying to access our service,
#    # they must be using HTTPS connection
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#spec:
#  tls:
#    - hosts:
#        - yourdomain.com
#        - www.yourdomain.com
#        # secretName must the same as in certificate.yaml
#        secretName: yourdomain-com
#  # Rules configuration
#  rules:
#    # /!\ Only specific for this host /!\
#    # This bloc is not apply to "www.yourdomain.com"
#    - host: yourdomain.com
#      # Rule on http
#      http:
#        # Redirect according to the URL
#        paths:
#          # Redirect to client-cluster-ip-service (more precisely multi-client pod)
#          - path: /?(.*)
#            backend:
#              serviceName: client-cluster-ip-service
#              servicePort: 3000
#          # Redirect to server-cluster-ip-service (more precisely multi-server pod)
#          - path: /api/?(.*)
#            backend:
#              serviceName: server-cluster-ip-service
#              servicePort: 5000
#    # /!\ Only specific for this host /!\
#    # This bloc is not apply to "yourdomain.com"
#    - host: www.yourdomain.com
#      # Rule on http
#      http:
#        # Redirect according to the URL
#        paths:
#          # Redirect to client-cluster-ip-service (more precisely multi-client pod)
#          - path: /?(.*)
#            backend:
#              serviceName: client-cluster-ip-service
#              servicePort: 3000
#          # Redirect to server-cluster-ip-service (more precisely multi-server pod)
#          - path: /api/?(.*)
#            backend:
#              serviceName: server-cluster-ip-service
#              servicePort: 5000
